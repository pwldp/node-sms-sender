//
// node-kannel-dashboard
// PostgreSQl database handler
//
// Dariusz Pawlak <pawlakdp@gmail.com>
// 2013.07.15
//
var conf = require("../../conf")
    , pg = require("pg")
    , util = require("util")
    , moment = require("moment")
    , sendSMS = require("./sendsms")
    //, bigInt = require("big-integer")
    ;
//
var client = new pg.Client(conf.pgURI);
client.connect();
client.on('error', function(data){
    console.error("PostgreSQL error: "+data);
});
//
client.query('LISTEN "new_sms_in_queue"');
//
client.on('notification', function(data) {
    console.log("NEW notification from PgSQL: "+util.inspect(data));
    var jsonSMS = JSON.parse(data.payload);
    var sms = {
	sname: jsonSMS.sender_name,
	rname: jsonSMS.receiver_name,
	phone: jsonSMS.receiver_phone_number,
	text: sms_contents
    };
    sendSMS(jsonSMS.receiver_phone_number, jsonSMS.sms_contents, function(err, ret){
	//if (err) return res({"err":err, "ret":'ERR'});
	console.error("sendSMS error: "+err);
	//return res({"err":null, "ret":'OK'});
	return true;
    });
});
//
//
exports.saveSMS = function(sms) {
    console.log("saveSMS(): "+util.inspect(sms));
    if (sms.sname && sms.rname && sms.phone && sms.text){
	now = moment();
	client.query(
	    "INSERT INTO sms_send_queue (sender_name,receiver_name,receiver_phone_number,status,sms_contents,note) values ($1,$2,$3,'new',$4,$5)",
	    [sms.sname, sms.rname, sms.phone, sms.text, ""+now.format("YYYY-MM-DD HH:mm:ss")], 
	    function(err, res){
		if (err) console.log("ERROR: "+err);
		console.log("res="+util.inspect(res));
	    }
	);
    } else {
	console.error("saveSMS:error: No required arguments.");
    };
};
//
// Tests
//
/*
var maxSmsInTestPack=5;
setInterval(function() {
    now = moment();
    var smsNum = Math.floor((Math.random()*maxSmsInTestPack)+1);
    console.log("\nInsert  SMS into queue "+smsNum +" SMSs, at: "+ now );
    for (var i=0; i<smsNum; i++){
	console.log("SMS #"+i+" at "+now)
	client.query("INSERT INTO sms_send_queue (sender_name,receiver_name,receiver_phone_number,status,sms_contents,note) values ('foo','boo','00000000000','new',$1,$2)",[i+". "+now.format("YYYY-MM-DD HH:mm:ss"), "timestamp:"+now.format("X")], function(err, res){
	    if (err) console.log("ERROR: "+err);
	    console.log("res="+util.inspect(res));
	});
    };
}, 5000 );
*/
//
// EOF
//